apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'
/*import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.9'
        classpath 'org.aspectj:aspectjweaver:1.8.9'
    }
}
repositories {
    mavenCentral()
}
final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}*/


android {
    compileSdkVersion var.android.compileSdkVersion
    buildToolsVersion var.android.buildToolsVersion
    defaultConfig {
        applicationId "com.ldlywt.androidadvancedemo"
        minSdkVersion var.android.defaultConfig.minSdkVersion
        targetSdkVersion var.android.defaultConfig.targetSdkVersion
        versionCode var.android.defaultConfig.versionCode
        versionName var.android.defaultConfig.versionName
        testInstrumentationRunner var.android.defaultConfig.testInstrumentationRunner
    }
    buildTypes {
        release {
            buildConfigField("boolean", "isDebug", "false") // 定义 isdubug 的值
            minifyEnabled var.android.buildTypes.release.minifyEnabled
            proguardFiles getDefaultProguardFile(var.android.buildTypes.release.defaultProguardFile), var.android.buildTypes.release.proguardFile
        }
        debug{
            buildConfigField("boolean", "isDebug", "true")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':ioc')
    implementation project(':easyhttp')
    implementation project(':base')
    implementation project(':easyimageloader')
    implementation project(':xdialog')
    implementation project(':xeventbus')
    implementation project(':views')
//    implementation project(':xthread')
    //Android
    implementation var.dependencies.appcompat_v7
    implementation var.dependencies.support_v4
    implementation var.dependencies.constraint_layout
    implementation var.dependencies.recyclerview
    implementation var.dependencies.design
    //Square
    implementation var.dependencies.okhttp
    implementation var.dependencies.okhttp_log
    implementation var.dependencies.rxjava2
    implementation var.dependencies.rxandroid
    implementation var.dependencies.retrofit
    implementation var.dependencies.converter_gson
    implementation var.dependencies.adapter_rxjava
    implementation var.dependencies.logger
    implementation var.dependencies.utilcode
    implementation var.dependencies.aspectjrt
//    annotationProcessor var.dependencies.dagger_compiler
//    implementation var.dependencies.dagger
    implementation var.dependencies.BaseRecyclerViewAdapterHelper
    implementation var.dependencies.glide

}
